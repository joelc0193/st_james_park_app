// Mocks generated by Mockito 5.4.2 from annotations
// in st_james_park_app/test/user_upload_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:st_james_park_app/services/firestore_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFieldValue_1 extends _i1.SmartFake implements _i2.FieldValue {
  _FakeFieldValue_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i3.FirestoreService {
  MockFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  _i2.FieldValue getServerTimestamp() => (super.noSuchMethod(
        Invocation.method(
          #getServerTimestamp,
          [],
        ),
        returnValue: _FakeFieldValue_1(
          this,
          Invocation.method(
            #getServerTimestamp,
            [],
          ),
        ),
      ) as _i2.FieldValue);
  @override
  _i4.Stream<_i2.DocumentSnapshot<Object?>> getAdminNumbers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdminNumbers,
          [],
        ),
        returnValue: _i4.Stream<_i2.DocumentSnapshot<Object?>>.empty(),
      ) as _i4.Stream<_i2.DocumentSnapshot<Object?>>);
  @override
  _i4.Future<void> updateAdminNumbers(Map<String, int>? numbers) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAdminNumbers,
          [numbers],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> uploadImage(String? imageDataUrl) => (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [imageDataUrl],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> uploadText(String? text) => (super.noSuchMethod(
        Invocation.method(
          #uploadText,
          [text],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String?> getUploadedText() => (super.noSuchMethod(
        Invocation.method(
          #getUploadedText,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String?> getSpotlightImageUrl() => (super.noSuchMethod(
        Invocation.method(
          #getSpotlightImageUrl,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}
